from fbtor.FBoolectorTypes import FPType, RMode

s = FPType.single
d = FPType.double
e = FPType.extended
r = RMode.to_zero
n = RMode.to_nearest

subnormal = [
("2E-310","0","00000000000","0000001001001101000100010110111000011100110001010110",d,n),
("7E-322","0","00000000000","0000000000000000000000000000000000000000000010001110",d,n),
("9e-315","0","00000000000","0000000000000000000001101100100100111011100000111000",d,n),
("3e-323","0","00000000000","0000000000000000000000000000000000000000000000000110",d,n),
("1E-45"        ,"0","00000000","00000000000000000000001",s,n),
("1.1754942E-38","0","00000000","11111111111111111111111",s,n),
("-1.175E-38"   ,"1","00000000","11111111111001000111000",s,n),
("-3.72E-40"    ,"1","00000000","00001000000110011111100",s,n),
("+3.72E-40"    ,"0","00000000","00001000000110011111100",s,n)
]

small= [
("+0"       ,"0","00000000","00000000000000000000000",s,n),
("-0"       ,"1","00000000","00000000000000000000000",s,n),
("+2.17e-4" ,"0","01110010","11000111000101001111110",s,n),
("-2.17e-4" ,"1","01110010","11000111000101001111110",s,n),
("-2e-10"   ,"1","01011110","10110111110011011111111",s,n),
("1e-15"    ,"0","01001101","00100000001110101111101",s,n),
("5E-38"    ,"0","00000011","00010000001110011101010",s,n),
("1.18E-38" ,"0","00000001","00000000111110110011001",s,n),
("1.176e-38","0","00000001","00000000000111000011000",s,n),
("7E-305"   ,"0","00000001100","1000100100111110110100001100100000001000111011000110",d,n),
("-3e-39"   ,"1","01101111111","0000010101010110001111000100111111111110001000100011",d,n),
("-3E-308"  ,"1","00000000001","0101100100101000001101101000010011011011101001110111",d,n),
("-3E-300"  ,"1","00000011100","0000000100101001011111010010001110101011011010000011",d,n),
("4.8e-51"  ,"0","01101010111","1100101110111111101010000101010001110001011100101000",d,n),
("2.56e-28" ,"0","01110100011","0100010010000100101111111110111010111100001010100000",d,n),
("1e-40"    ,"0","011111101111010","0001011011000010011000100111011101110101011110011100010110001100",e,n)
]

large= [
("-1.75E308","1","11111111110","1111001001101010101000101010010111001001111100011000",d,n),
("+1.75E308","0","11111111110","1111001001101010101000101010010111001001111100011000",d,n),
(  "3E307"  ,"0","11111111100","0101010111000101011101101101100000010101011100100110",d,n),
("-3.2e307" ,"1","11111111100","0110110010001110010111001010001000111001000000101001",d,n),
("1e200"    ,"0","11010010111","0100111001110001100011010111110101110110001001011010",d,n),
("3E38"     ,"0","11111110","11000011011000111100110",s,n),
("-3.2E38"  ,"1","11111110","11100001011110111000010",s,n),
('-inf'     ,"1","11111111","00000000000000000000000",s,n),
("+inf"     ,"0","11111111","00000000000000000000000",s,n),
("-1.25e200","1","100001010010111","1010001000001101111100001101110011010011101011110000101110010000",e,n)
]

normal= [
("+5.12e3"  ,"0","10001011","01000000000000000000000",s,n),
("-5.12e3"  ,"1","10001011","01000000000000000000000",s,n),
("+0.1"     ,"0","01111111011","1001100110011001100110011001100110011001100110011010",d,n),
("-64"      ,"1","10000000101","0000000000000000000000000000000000000000000000000000",d,n),
("12345671561654e8","0","10001000101","0000101110110100001111100111111000001111101010111000",d,n),
("-876987411112e-7","1","10000001111","0101011010010010101111011011100101110110101011101011",d,n),
("3e-8"     ,"0","01111100110","0000000110110010101100101001101001000110100100101011",d,n),
("45e-2"    ,"0","01111111101","1100110011001100110011001100110011001100110011001101",d,n),
("9231e-4"  ,"0","01111111110","1101100010100000100100000010110111100000000011010010",d,n),
("-23e3"    ,"1","10000001101","0110011101100000000000000000000000000000000000000000",d,n),
("12325e-2" ,"0","10000000101","1110110100000000000000000000000000000000000000000000",d,n),
("1024"     ,"0","10001001","00000000000000000000000",s,n),
("-0.005"   ,"1","01110111","01000111101011100001010",s,n),
("-1.00000003"       ,"1","01111111111","0000000000000000000000001000000011011001010110010101",d,n),
("1.000000000000001" ,"0","01111111111","0000000000000000000000000000000000000000000000000101",d,n),
("256.00000000000001","0","10000000111","0000000000000000000000000000000000000000000000000000",d,n)
]

#build test cases for fSign/fExponent/fMantisse
set_fSign = []
set_fExponent = []
set_fMantisse = []
for (val,s,e,m,fptype,rmode) in subnormal+small+large+normal:
    set_fSign.append((val,s,fptype,rmode))
    set_fExponent.append((val,e,fptype,rmode))
    set_fMantisse.append((val,m,fptype,rmode))
